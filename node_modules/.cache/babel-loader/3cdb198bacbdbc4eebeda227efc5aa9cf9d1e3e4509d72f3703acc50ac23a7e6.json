{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H P\\\\IdeaProjects\\\\reactmap\\\\src\\\\components\\\\Zone.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Zone = _ref => {\n  _s();\n  let {\n    ville,\n    chooseZone\n  } = _ref;\n  const wrapperFunction = ev => {\n    //do something\n    chooseZone(ev);\n    //do something\n    setTt(ev);\n    //do something\n  };\n\n  const [zones, setZones] = useState([]);\n  const [tt, setTt] = useState();\n  useEffect(() => {\n    const fetchZones = async () => {\n      const res = await fetch('http://localhost:9090/villes/zones/' + ville);\n      const result = await res.json();\n      setZones(result);\n    };\n    if (ville !== \"0\") {\n      fetchZones();\n      setTt(\"0\");\n    }\n  }, [ville]);\n  const zone = zones.map((ev, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: ev.id,\n      children: ev.nom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this);\n    //onChange={() => setLocationInfo({ id: ev.id, lat: ev.lat })}\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"zonet\",\n      children: \" zone :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      size: \"lg\",\n      name: \"zones\",\n      id: \"zone-select\",\n      value: tt,\n      onChange: e => wrapperFunction(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"--Veillez Choissir une Zone--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), zone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n_s(Zone, \"EDdFcSceQBLQLWtqcWjqX2t4GJ4=\");\n_c = Zone;\nexport default Zone;\nvar _c;\n$RefreshReg$(_c, \"Zone\");","map":{"version":3,"names":["useState","useEffect","Form","Zone","ville","chooseZone","wrapperFunction","ev","setTt","zones","setZones","tt","fetchZones","res","fetch","result","json","zone","map","index","id","nom","e","target","value"],"sources":["C:/Users/H P/IdeaProjects/reactmap/src/components/Zone.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst Zone = ({ville,chooseZone}) => {\r\n\r\n  const wrapperFunction = (ev) => {\r\n    //do something\r\n    chooseZone(ev);\r\n    //do something\r\n    setTt(ev);\r\n    //do something\r\n  }\r\n   \r\n\r\n\r\n\r\n  const [zones , setZones] = useState([])\r\n  const [tt , setTt] = useState()\r\n  useEffect(() => {\r\n    const fetchZones = async () => {\r\n      \r\n      const res = await fetch('http://localhost:9090/villes/zones/'+ville)\r\n      const result = await res.json()\r\n      setZones(result)\r\n    }\r\n    if(ville!==\"0\") {\r\n      fetchZones()\r\n      setTt(\"0\")\r\n\r\n    }\r\n    \r\n\r\n  },[ville])\r\n  const zone = zones.map((ev, index) => {\r\n      return <option value={ev.id} >\r\n          {ev.nom}\r\n      </option>\r\n      //onChange={() => setLocationInfo({ id: ev.id, lat: ev.lat })}\r\n    \r\n  })  \r\n\r\n    return (\r\n      <>\r\n          <h3 id='zonet'> zone :</h3>\r\n           <Form.Select size=\"lg\" name=\"zones\" id=\"zone-select\" value={tt} onChange={e=>wrapperFunction(e.target.value)} >\r\n              <option value=\"0\">--Veillez Choissir une Zone--</option>\r\n              {zone}\r\n          </Form.Select>\r\n          \r\n      </>\r\n     \r\n    )\r\n\r\n\r\n  \r\n}\r\nexport default Zone\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAAA;AAExC,MAAMC,IAAI,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAACC,KAAK;IAACC;EAAU,CAAC;EAE9B,MAAMC,eAAe,GAAIC,EAAE,IAAK;IAC9B;IACAF,UAAU,CAACE,EAAE,CAAC;IACd;IACAC,KAAK,CAACD,EAAE,CAAC;IACT;EACF,CAAC;;EAKD,MAAM,CAACE,KAAK,EAAGC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACW,EAAE,EAAGH,KAAK,CAAC,GAAGR,QAAQ,EAAE;EAC/BC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,YAAY;MAE7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,GAACV,KAAK,CAAC;MACpE,MAAMW,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC/BN,QAAQ,CAACK,MAAM,CAAC;IAClB,CAAC;IACD,IAAGX,KAAK,KAAG,GAAG,EAAE;MACdQ,UAAU,EAAE;MACZJ,KAAK,CAAC,GAAG,CAAC;IAEZ;EAGF,CAAC,EAAC,CAACJ,KAAK,CAAC,CAAC;EACV,MAAMa,IAAI,GAAGR,KAAK,CAACS,GAAG,CAAC,CAACX,EAAE,EAAEY,KAAK,KAAK;IAClC,oBAAO;MAAQ,KAAK,EAAEZ,EAAE,CAACa,EAAG;MAAA,UACvBb,EAAE,CAACc;IAAG;MAAA;MAAA;MAAA;IAAA,QACF;IACT;EAEJ,CAAC,CAAC;;EAEA,oBACE;IAAA,wBACI;MAAI,EAAE,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAC1B,QAAC,IAAI,CAAC,MAAM;MAAC,IAAI,EAAC,IAAI;MAAC,IAAI,EAAC,OAAO;MAAC,EAAE,EAAC,aAAa;MAAC,KAAK,EAAEV,EAAG;MAAC,QAAQ,EAAEW,CAAC,IAAEhB,eAAe,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAA,wBAC1G;QAAQ,KAAK,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuC,EACvDP,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACK;EAAA,gBAEf;AAMT,CAAC;AAAA,GApDKd,IAAI;AAAA,KAAJA,IAAI;AAqDV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}