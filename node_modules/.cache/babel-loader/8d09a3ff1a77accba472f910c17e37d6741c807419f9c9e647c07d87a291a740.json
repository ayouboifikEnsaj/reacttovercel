{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H P\\\\IdeaProjects\\\\reactmap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport Loader from './components/Loader';\nimport Header from './components/Header';\nimport VilleComponent from './components/VilleComponent'; // Ensure correct path\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Buttom from \"./components/Buttom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [curent_position, setCurent_position] = useState();\n  const [selected_PH, setSelected_PH] = useState(\"0\");\n  const [selected_zone, setSelected_Zone] = useState(\"0\");\n  const [pharmacytData, setPharmacyData] = useState([]);\n  const [pharmacytNuit, setPharmacyNuit] = useState([]);\n  const [pharmacytJour, setPharmacyJour] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [ville, setVille] = useState([]);\n  const choosePosition = center => {\n    setCurent_position(center);\n  };\n  const chooseZone = id => {\n    setSelected_Zone(id);\n  };\n  const choosePH = id => {\n    setSelected_PH(id);\n  };\n  useEffect(() => {\n    const fetchPharmacy = async () => {\n      const res = await fetch('http://localhost:9090/zones/pharmacies/' + selected_zone);\n      const result = await res.json();\n      setPharmacyData(result);\n    };\n    const fetchPharmacyJour = async () => {\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/jour/' + selected_zone);\n      const result = await res.json();\n      setPharmacyJour(result);\n    };\n    const fetchPharmacyNuit = async () => {\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/nuit/' + selected_zone);\n      const result = await res.json();\n      setPharmacyNuit(result);\n      console.log(result);\n    };\n    const fetchVille = async () => {\n      const res = await fetch('http://localhost:9090/villes/all');\n      const result = await res.json();\n      setVille(result);\n    };\n    if (selected_zone != \"0\") {\n      fetchPharmacy();\n    }\n    fetchVille();\n    fetchPharmacyJour();\n    fetchPharmacyNuit();\n  }, [selected_zone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      ville: ville,\n      chooseZone: chooseZone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauche\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        selected_PH: selected_PH,\n        choosePH: choosePH,\n        eventData: pharmacytData,\n        choosePosition: choosePosition,\n        curent_position: curent_position,\n        pharmacytNuit: pharmacytNuit,\n        pharmacytJour: pharmacytJour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"droite\",\n      children: /*#__PURE__*/_jsxDEV(VilleComponent, {\n        ville: ville,\n        chooseZone: chooseZone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Buttom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"pO3h7bb311ORJIuN1yqHKb642/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Map","Loader","Header","VilleComponent","Container","Row","Col","Buttom","App","curent_position","setCurent_position","selected_PH","setSelected_PH","selected_zone","setSelected_Zone","pharmacytData","setPharmacyData","pharmacytNuit","setPharmacyNuit","pharmacytJour","setPharmacyJour","loading","setLoading","ville","setVille","choosePosition","center","chooseZone","id","choosePH","fetchPharmacy","res","fetch","result","json","fetchPharmacyJour","fetchPharmacyNuit","console","log","fetchVille"],"sources":["C:/Users/H P/IdeaProjects/reactmap/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Map from './components/Map'\r\nimport Loader from './components/Loader'\r\nimport Header from './components/Header'\r\nimport VilleComponent from './components/VilleComponent'; // Ensure correct path\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Buttom from \"./components/Buttom\";\r\n\r\n\r\nfunction App() {\r\n  const [curent_position , setCurent_position] = useState()\r\n  const [selected_PH , setSelected_PH] = useState(\"0\")\r\n  const [ selected_zone , setSelected_Zone] = useState(\"0\")\r\n  const [pharmacytData, setPharmacyData] = useState([])\r\n  const [pharmacytNuit, setPharmacyNuit] = useState([])\r\n  const [pharmacytJour, setPharmacyJour] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [ville , setVille] = useState([])\r\n    const choosePosition = (center) => {\r\n        setCurent_position(center);\r\n      };\r\n     \r\n      const chooseZone = (id) => {\r\n        setSelected_Zone(id);\r\n      };\r\n      const choosePH = (id) => {\r\n        setSelected_PH(id);\r\n      };\r\n  \r\n  \r\n  useEffect(() => {\r\n    const fetchPharmacy = async () => {\r\n      const res = await fetch('http://localhost:9090/zones/pharmacies/'+selected_zone)\r\n      const result = await res.json()\r\n      setPharmacyData(result)\r\n      \r\n    }\r\n    const fetchPharmacyJour = async () => {\r\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/jour/'+selected_zone)\r\n      const result = await res.json()\r\n      setPharmacyJour(result)\r\n    }\r\n    const fetchPharmacyNuit = async () => {\r\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/nuit/'+selected_zone)\r\n      const result = await res.json()\r\n      setPharmacyNuit(result)\r\n      console.log(result)\r\n    }\r\n    const fetchVille = async () => { \r\n      const res = await fetch('http://localhost:9090/villes/all')\r\n      const result = await res.json()\r\n      setVille(result)\r\n    }\r\n    if(selected_zone!=\"0\")\r\n    {\r\n      fetchPharmacy()\r\n    }\r\n   \r\n    fetchVille()\r\n    fetchPharmacyJour()\r\n    fetchPharmacyNuit()\r\n    \r\n  }, [selected_zone] )\r\n\r\n  return (\r\n      <div>\r\n        <Header ville={ville} chooseZone={chooseZone}/>\r\n        <div className=\"gauche\">\r\n              <Map\r\n                  selected_PH={selected_PH}\r\n                  choosePH={choosePH}\r\n                  eventData={pharmacytData}\r\n                  choosePosition={choosePosition}\r\n                  curent_position={curent_position}\r\n                  pharmacytNuit={pharmacytNuit}\r\n                  pharmacytJour={pharmacytJour}\r\n              />\r\n        </div>\r\n        <div className=\"droite\">\r\n            <VilleComponent ville={ville} chooseZone={chooseZone} />\r\n        </div>\r\n        <Buttom />\r\n      </div>\r\n)\r\n  ;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}