{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H P\\\\IdeaProjects\\\\reactmap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport PharmacieList from \"./components/PharmacieLIst\";\nimport Loader from './components/Loader';\nimport Header from './components/Header';\nimport VilleComponent from './components/VilleComponent'; // Ensure correct path\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Buttom from \"./components/Buttom\";\nimport SearchBox from \"./components/SearchBox\";\nimport RightSide from \"./components/RightSide\";\nimport Main from \"./components/Main\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [curent_position, setCurent_position] = useState();\n  const [selected_PH, setSelected_PH] = useState(\"0\");\n  const [selected_zone, setSelected_Zone] = useState(\"0\");\n  const [pharmacytData, setPharmacyData] = useState([]);\n  const [pharmacytNuit, setPharmacyNuit] = useState([]);\n  const [pharmacytJour, setPharmacyJour] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [ville, setVille] = useState([]);\n  const choosePosition = center => {\n    setCurent_position(center);\n  };\n  const chooseZone = id => {\n    setSelected_Zone(id);\n  };\n  const choosePH = id => {\n    setSelected_PH(id);\n  };\n  useEffect(() => {\n    const fetchPharmacy = async () => {\n      const res = await fetch('http://localhost:9090/zones/pharmacies/' + selected_zone);\n      const result = await res.json();\n      setPharmacyData(result);\n    };\n    const fetchPharmacyJour = async () => {\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/jour/' + selected_zone);\n      const result = await res.json();\n      setPharmacyJour(result);\n    };\n    const fetchPharmacyNuit = async () => {\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/nuit/' + selected_zone);\n      const result = await res.json();\n      setPharmacyNuit(result);\n      console.log(result);\n    };\n    const fetchVille = async () => {\n      const res = await fetch('http://localhost:9090/villes/all');\n      const result = await res.json();\n      setVille(result);\n    };\n    if (selected_zone != \"0\") {\n      fetchPharmacy();\n    }\n    fetchVille();\n    fetchPharmacyJour();\n    fetchPharmacyNuit();\n  }, [selected_zone]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(RightSide, {\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          selected_PH: selected_PH,\n          choosePH: choosePH,\n          eventData: pharmacytData,\n          choosePosition: choosePosition,\n          curent_position: curent_position,\n          pharmacytNuit: pharmacytNuit,\n          pharmacytJour: pharmacytJour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(SearchBox, {\n            ville: ville,\n            chooseZone: chooseZone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(PharmacieList, {\n              pharmacies: pharmacytData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Buttom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"pO3h7bb311ORJIuN1yqHKb642/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Map","PharmacieList","Loader","Header","VilleComponent","Container","Row","Col","Buttom","SearchBox","RightSide","Main","NavBar","App","curent_position","setCurent_position","selected_PH","setSelected_PH","selected_zone","setSelected_Zone","pharmacytData","setPharmacyData","pharmacytNuit","setPharmacyNuit","pharmacytJour","setPharmacyJour","loading","setLoading","ville","setVille","choosePosition","center","chooseZone","id","choosePH","fetchPharmacy","res","fetch","result","json","fetchPharmacyJour","fetchPharmacyNuit","console","log","fetchVille"],"sources":["C:/Users/H P/IdeaProjects/reactmap/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Map from './components/Map'\r\nimport PharmacieList from \"./components/PharmacieLIst\";\r\nimport Loader from './components/Loader'\r\nimport Header from './components/Header'\r\nimport VilleComponent from './components/VilleComponent'; // Ensure correct path\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Buttom from \"./components/Buttom\";\r\nimport SearchBox from \"./components/SearchBox\";\r\nimport RightSide from \"./components/RightSide\";\r\nimport Main from \"./components/Main\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\n\r\nfunction App() {\r\n  const [curent_position , setCurent_position] = useState()\r\n  const [selected_PH , setSelected_PH] = useState(\"0\")\r\n  const [ selected_zone , setSelected_Zone] = useState(\"0\")\r\n  const [pharmacytData, setPharmacyData] = useState([])\r\n  const [pharmacytNuit, setPharmacyNuit] = useState([])\r\n  const [pharmacytJour, setPharmacyJour] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [ville , setVille] = useState([])\r\n    const choosePosition = (center) => {\r\n        setCurent_position(center);\r\n      };\r\n     \r\n      const chooseZone = (id) => {\r\n        setSelected_Zone(id);\r\n      };\r\n      const choosePH = (id) => {\r\n        setSelected_PH(id);\r\n      };\r\n  \r\n  \r\n  useEffect(() => {\r\n    const fetchPharmacy = async () => {\r\n      const res = await fetch('http://localhost:9090/zones/pharmacies/'+selected_zone)\r\n      const result = await res.json()\r\n      setPharmacyData(result)\r\n      \r\n    }\r\n    const fetchPharmacyJour = async () => {\r\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/jour/'+selected_zone)\r\n      const result = await res.json()\r\n      setPharmacyJour(result)\r\n    }\r\n    const fetchPharmacyNuit = async () => {\r\n      const res = await fetch('http://localhost:9090/pharmacieDeGardes/getActual/nuit/'+selected_zone)\r\n      const result = await res.json()\r\n      setPharmacyNuit(result)\r\n      console.log(result)\r\n    }\r\n    const fetchVille = async () => { \r\n      const res = await fetch('http://localhost:9090/villes/all')\r\n      const result = await res.json()\r\n      setVille(result)\r\n    }\r\n    if(selected_zone!=\"0\")\r\n    {\r\n      fetchPharmacy()\r\n    }\r\n   \r\n    fetchVille()\r\n    fetchPharmacyJour()\r\n    fetchPharmacyNuit()\r\n    \r\n  }, [selected_zone] )\r\n\r\n  return (\r\n      <>\r\n        <Header/>\r\n        <Main>\r\n          <RightSide>\r\n            <Map\r\n                selected_PH={selected_PH}\r\n                choosePH={choosePH}\r\n                eventData={pharmacytData}\r\n                choosePosition={choosePosition}\r\n                curent_position={curent_position}\r\n                pharmacytNuit={pharmacytNuit}\r\n                pharmacytJour={pharmacytJour}\r\n            />\r\n          </RightSide>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"row\">\r\n              <SearchBox ville={ville} chooseZone={chooseZone} />\r\n            </div>\r\n            <div className=\"row\">\r\n              <div>\r\n\r\n                <PharmacieList pharmacies={pharmacytData} />\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* <PharmaciesList pharmacies={pharmacies}/> */}\r\n\r\n\r\n\r\n\r\n\r\n        </Main>\r\n        <Buttom/>\r\n\r\n\r\n\r\n\r\n      </>\r\n\r\n  )\r\n      ;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}